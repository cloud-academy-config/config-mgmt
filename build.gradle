plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}


group = 'lgu.common'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    set('springCloudVersion', "2021.0.0")
}

dependencies {
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.153'

    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-config:3.1.0'

    implementation("org.zalando:spring-cloud-config-aws-kms:5.1.2")

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-server', version: '3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // spring cloud starter config 내 jackson-databind:2.13.1버전 취약점 조치
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2.2'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

processResources {
    duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
}


test {
    useJUnitPlatform()
}
sourceSets {
    ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}


bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}